name: Go Vault Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build cross-platform binaries
        run: |
          mkdir -p bin
          GOOS=linux GOARCH=amd64 go build -o bin/vault-linux ./cmd/vault
          GOOS=darwin GOARCH=amd64 go build -o bin/vault-darwin ./cmd/vault
          GOOS=windows GOARCH=amd64 go build -o bin/vault.exe ./cmd/vault

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vault-linux
          asset_name: vault-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vault-darwin
          asset_name: vault-darwin
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/vault.exe
          asset_name: vault.exe
          asset_content_type: application/octet-stream
